{"ast":null,"code":"import { createStore } from \"vuex\";\nimport students from '../data/students.json';\nimport { getScoreInCategory } from \"./helpers\";\nexport default createStore({\n  state() {\n    return {\n      studentsList: ['ok'],\n      currentCategory: undefined\n    };\n  },\n  getters: {\n    getStudentsList: ({\n      studentsList\n    }) => studentsList,\n    getCurrentCategory: ({\n      currentCategory\n    }) => currentCategory,\n    // Варіант 1\n    // getStudentsListWithCategories:(state)=>{\n    // \treturn (scoreCategory)=>{\n    // \t\tif(scoreCategory===12)return state.studentsList\n\n    // \t\t\treturn state.studentsList.map((student)=>({\n    // \t\t\t\t...student,\n    // \t\t\t\tscore: getScoreInCategory(student.score)\n    // \t\t\t}))\n    // \t}\n    // }\n\n    // Варіант 2\n    getStudentsListWithCategories: state => {\n      return scoreCategory => {\n        if (scoreCategory === 12) return state.studentsList;else {\n          const studentsListCopy = JSON.parse(JSON.stringify(state.studentsList));\n          studentsListCopy.forEach(student => {\n            student.score = getScoreInCategory(student.score);\n          });\n          return studentsListCopy;\n        }\n      };\n    }\n\n    // Варіант 3\n    // getStudentsListWithCategories:(state)=>(scoreCategory)=>\n    // \tscoreCategory===12 \n    // \t\t? state.studentsList \n    // \t\t: state.studentsList.map((student)=>({\n    // \t\t\t\t\t...student,\n    // \t\t\t\t\tscore: getScoreInCategory(student.score)\n    // \t\t}))\n  },\n\n  mutations: {\n    setStudentsList(state, list) {\n      state.studentsList = list;\n    },\n    setCategory(state, category) {\n      state.currentCategory = category;\n    }\n  },\n  actions: {\n    loadStudentsList({\n      commit\n    }) {\n      commit('setStudentsList', students);\n    },\n    setStudentCategory({\n      commit\n    }, category) {\n      commit('setCategory', category);\n    }\n  },\n  modules: {}\n});","map":{"version":3,"names":["createStore","students","getScoreInCategory","state","studentsList","currentCategory","undefined","getters","getStudentsList","getCurrentCategory","getStudentsListWithCategories","scoreCategory","studentsListCopy","JSON","parse","stringify","forEach","student","score","mutations","setStudentsList","list","setCategory","category","actions","loadStudentsList","commit","setStudentCategory","modules"],"sources":["C:/Users/12799/freelancer/Vue_2023/Vue/HomeAssigmnents/lesson7/task1/src/store/index.js"],"sourcesContent":["import { createStore } from \"vuex\";\nimport students from '../data/students.json'\nimport { getScoreInCategory } from \"./helpers\";\nexport default createStore({\n  state() {\n\treturn{\n\t\tstudentsList: ['ok'],\n\t\tcurrentCategory: undefined\n\t}\n  },\n  getters: {\n\tgetStudentsList:({studentsList})=>studentsList,\n\tgetCurrentCategory:({currentCategory})=>currentCategory,\n\t// Варіант 1\n\t// getStudentsListWithCategories:(state)=>{\n\t// \treturn (scoreCategory)=>{\n\t// \t\tif(scoreCategory===12)return state.studentsList\n\t\t\t\n\t// \t\t\treturn state.studentsList.map((student)=>({\n\t// \t\t\t\t...student,\n\t// \t\t\t\tscore: getScoreInCategory(student.score)\n\t// \t\t\t}))\n\t// \t}\n\t// }\n\n\t// Варіант 2\n\tgetStudentsListWithCategories:(state)=>{\n\t\treturn (scoreCategory)=>{\n\t\t\tif(scoreCategory===12) return state.studentsList\n\t\t\telse {\n\t\t\t\tconst studentsListCopy = JSON.parse(JSON.stringify(state.studentsList))\n\t\t\t\tstudentsListCopy.forEach((student) => {\n\t\t\t\t\tstudent.score = getScoreInCategory(student.score)\n\t\t\t\t})\n\t\t\t\treturn studentsListCopy\n\t\t\t}\n\t\t}\n\t}\n\n\t// Варіант 3\n\t// getStudentsListWithCategories:(state)=>(scoreCategory)=>\n\t// \tscoreCategory===12 \n\t// \t\t? state.studentsList \n\t// \t\t: state.studentsList.map((student)=>({\n\t// \t\t\t\t\t...student,\n\t// \t\t\t\t\tscore: getScoreInCategory(student.score)\n\t// \t\t}))\n  },\n  mutations: {\n\tsetStudentsList(state, list){\n\t\tstate.studentsList=list\n\t},\n\tsetCategory(state,category){\n\t\tstate.currentCategory=category\n\t}\n  },\n  actions: {\n\tloadStudentsList({commit}){\n\t\tcommit('setStudentsList', students)\n\t},\n\tsetStudentCategory({commit}, category){\n\t\tcommit('setCategory',category)\n\t}\n  },\n  modules: {},\n});\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,MAAM;AAClC,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C,SAASC,kBAAkB,QAAQ,WAAW;AAC9C,eAAeF,WAAW,CAAC;EACzBG,KAAKA,CAAA,EAAG;IACT,OAAM;MACLC,YAAY,EAAE,CAAC,IAAI,CAAC;MACpBC,eAAe,EAAEC;IAClB,CAAC;EACA,CAAC;EACDC,OAAO,EAAE;IACVC,eAAe,EAACA,CAAC;MAACJ;IAAY,CAAC,KAAGA,YAAY;IAC9CK,kBAAkB,EAACA,CAAC;MAACJ;IAAe,CAAC,KAAGA,eAAe;IACvD;IACA;IACA;IACA;;IAEA;IACA;IACA;IACA;IACA;IACA;;IAEA;IACAK,6BAA6B,EAAEP,KAAK,IAAG;MACtC,OAAQQ,aAAa,IAAG;QACvB,IAAGA,aAAa,KAAG,EAAE,EAAE,OAAOR,KAAK,CAACC,YAAY,MAC3C;UACJ,MAAMQ,gBAAgB,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,SAAS,CAACZ,KAAK,CAACC,YAAY,CAAC,CAAC;UACvEQ,gBAAgB,CAACI,OAAO,CAAEC,OAAO,IAAK;YACrCA,OAAO,CAACC,KAAK,GAAGhB,kBAAkB,CAACe,OAAO,CAACC,KAAK,CAAC;UAClD,CAAC,CAAC;UACF,OAAON,gBAAgB;QACxB;MACD,CAAC;IACF;;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;EACC,CAAC;;EACDO,SAAS,EAAE;IACZC,eAAeA,CAACjB,KAAK,EAAEkB,IAAI,EAAC;MAC3BlB,KAAK,CAACC,YAAY,GAACiB,IAAI;IACxB,CAAC;IACDC,WAAWA,CAACnB,KAAK,EAACoB,QAAQ,EAAC;MAC1BpB,KAAK,CAACE,eAAe,GAACkB,QAAQ;IAC/B;EACC,CAAC;EACDC,OAAO,EAAE;IACVC,gBAAgBA,CAAC;MAACC;IAAM,CAAC,EAAC;MACzBA,MAAM,CAAC,iBAAiB,EAAEzB,QAAQ,CAAC;IACpC,CAAC;IACD0B,kBAAkBA,CAAC;MAACD;IAAM,CAAC,EAAEH,QAAQ,EAAC;MACrCG,MAAM,CAAC,aAAa,EAACH,QAAQ,CAAC;IAC/B;EACC,CAAC;EACDK,OAAO,EAAE,CAAC;AACZ,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}