{"ast":null,"code":"import { createStore } from \"vuex\";\nimport students from '../data/students.json';\nimport { getScoreInCategory } from \"./helpers\";\nexport default createStore({\n  state() {\n    return {\n      studentsList: ['ok']\n    };\n  },\n  getters: {\n    getStudentsList: ({\n      studentsList\n    }) => studentsList,\n    getStudentsListWithCategories: state => {\n      return scoreCategory => {\n        if (scoreCategory === 12) state.studentsList;\n        return state.studentsList.map(student => ({\n          ...student,\n          score: getScoreInCategory(student.score)\n        }));\n      };\n    }\n    // getStudentsListWithCategories:(state)=>{\n    // \treturn (scoreCategory)=>{\n    // \t\tif(scoreCategory===12) return state.studentsList\n    // \t\telse {\n    // \t\t\tconst studentsListCopy = JSON.parse(JSON.stringify(state.studentsList))\n    // \t\t\tstudentsListCopy.forEach((student) => {\n    // \t\t\t\tstudent.score = getScoreInCategory(student.score)\n    // \t\t\t})\n    // \t\t\treturn studentsListCopy\n    // \t\t}\n    // \t}\n    // }\n  },\n\n  mutations: {\n    setStudentsList(state, list) {\n      state.studentsList = list;\n    }\n  },\n  actions: {\n    loadStudentsList({\n      commit\n    }) {\n      commit('setStudentsList', students);\n    }\n  },\n  modules: {}\n});","map":{"version":3,"names":["createStore","students","getScoreInCategory","state","studentsList","getters","getStudentsList","getStudentsListWithCategories","scoreCategory","map","student","score","mutations","setStudentsList","list","actions","loadStudentsList","commit","modules"],"sources":["C:/Users/12799/freelancer/Vue_2023/Vue/HomeAssigmnents/lesson7/task1/src/store/index.js"],"sourcesContent":["import { createStore } from \"vuex\";\nimport students from '../data/students.json'\nimport { getScoreInCategory } from \"./helpers\";\nexport default createStore({\n  state() {\n\treturn{\n\t\tstudentsList: ['ok']\n\t}\n  },\n  getters: {\n\tgetStudentsList:({studentsList})=>studentsList,\n\tgetStudentsListWithCategories:(state)=>{\n\t\treturn (scoreCategory)=>{\n\t\t\tif(scoreCategory===12) state.studentsList\n\t\t\t\n\t\t\t\treturn state.studentsList.map((student)=>({\n\t\t\t\t\t...student,\n\t\t\t\t\tscore: getScoreInCategory(student.score)\n\t\t\t\t}))\n\t\t}\n\t}\n\t// getStudentsListWithCategories:(state)=>{\n\t// \treturn (scoreCategory)=>{\n\t// \t\tif(scoreCategory===12) return state.studentsList\n\t// \t\telse {\n\t// \t\t\tconst studentsListCopy = JSON.parse(JSON.stringify(state.studentsList))\n\t// \t\t\tstudentsListCopy.forEach((student) => {\n\t// \t\t\t\tstudent.score = getScoreInCategory(student.score)\n\t// \t\t\t})\n\t// \t\t\treturn studentsListCopy\n\t// \t\t}\n\t// \t}\n\t// }\n\n\t\n  },\n  mutations: {\n\tsetStudentsList(state, list){\n\t\tstate.studentsList=list\n\t}\n  },\n  actions: {\n\tloadStudentsList({commit}){\n\t\tcommit('setStudentsList', students)\n\t}\n  },\n  modules: {},\n});\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,MAAM;AAClC,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C,SAASC,kBAAkB,QAAQ,WAAW;AAC9C,eAAeF,WAAW,CAAC;EACzBG,KAAKA,CAAA,EAAG;IACT,OAAM;MACLC,YAAY,EAAE,CAAC,IAAI;IACpB,CAAC;EACA,CAAC;EACDC,OAAO,EAAE;IACVC,eAAe,EAACA,CAAC;MAACF;IAAY,CAAC,KAAGA,YAAY;IAC9CG,6BAA6B,EAAEJ,KAAK,IAAG;MACtC,OAAQK,aAAa,IAAG;QACvB,IAAGA,aAAa,KAAG,EAAE,EAAEL,KAAK,CAACC,YAAY;QAExC,OAAOD,KAAK,CAACC,YAAY,CAACK,GAAG,CAAEC,OAAO,KAAI;UACzC,GAAGA,OAAO;UACVC,KAAK,EAAET,kBAAkB,CAACQ,OAAO,CAACC,KAAK;QACxC,CAAC,CAAC,CAAC;MACL,CAAC;IACF;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;EAGC,CAAC;;EACDC,SAAS,EAAE;IACZC,eAAeA,CAACV,KAAK,EAAEW,IAAI,EAAC;MAC3BX,KAAK,CAACC,YAAY,GAACU,IAAI;IACxB;EACC,CAAC;EACDC,OAAO,EAAE;IACVC,gBAAgBA,CAAC;MAACC;IAAM,CAAC,EAAC;MACzBA,MAAM,CAAC,iBAAiB,EAAEhB,QAAQ,CAAC;IACpC;EACC,CAAC;EACDiB,OAAO,EAAE,CAAC;AACZ,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}